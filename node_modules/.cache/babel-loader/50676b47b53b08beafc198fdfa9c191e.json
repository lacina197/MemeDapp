{"ast":null,"code":"import _regeneratorRuntime from \"/home/lacin/Desktop/myIPFS/ProjectLacin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lacin/Desktop/myIPFS/ProjectLacin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/lacin/Desktop/myIPFS/ProjectLacin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/lacin/Desktop/myIPFS/ProjectLacin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lacin/Desktop/myIPFS/ProjectLacin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/lacin/Desktop/myIPFS/ProjectLacin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/lacin/Desktop/myIPFS/ProjectLacin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lacin/Desktop/myIPFS/ProjectLacin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css'; //import { create } from 'ipfs-http-client'\n//const ipfs = create({ host: 'localhost', port: '5001' })\n//const IPFS=require('ipfs-http-client');\n//const ipfs2 =IPFS({host:'ipfs.infura.io',port:5001,protocol:'https'});\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }() // Get the account\n    // Get the network\n    // Get SC\n    // Get meme hash\n\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                console.log(\"Accounts : \" + accounts);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      console.log('file captured!'); // process file for IPFS\n\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Submiting the form..\");\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('IPFS Result', result); // const memeHash = result[0]\n\n        _this.setState({\n          memeHash: result[0].hash\n        });\n\n        if (error) {\n          console.error(\"aaaaaaaaaaaaaaaa\" + error);\n          return;\n        } // 2. Store file in BC\n\n      }); // Burada i≈ülem yap.\n    };\n\n    _this.state = {\n      account: '',\n      buffer: null,\n      memeHash: 'QmXfojCPuMEv94vRBEFVKgRhn4pd6EBbECHFFgnMMD68oB'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Hello Lacin\")), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://ipfs.infura.io/ipfs/\".concat(this.state.memeHash),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Change meme\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/lacin/Desktop/myIPFS/ProjectLacin/src/components/App.js"],"names":["React","Component","Web3","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","console","log","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","result","state","onSubmit","add","error","memeHash","hash","account","ethereum","enable","currentProvider","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\n\n//import { create } from 'ipfs-http-client'\n//const ipfs = create({ host: 'localhost', port: '5001' })\n\n//const IPFS=require('ipfs-http-client');\n//const ipfs2 =IPFS({host:'ipfs.infura.io',port:5001,protocol:'https'});\n\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  // Get the account\n  // Get the network\n  // Get SC\n  // Get meme hash\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    console.log(\"Accounts : \"+accounts)\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      buffer: null,\n      memeHash: 'QmXfojCPuMEv94vRBEFVKgRhn4pd6EBbECHFFgnMMD68oB'\n    };\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  captureFile = (event) => {\n    event.preventDefault()\n    console.log('file captured!')\n    // process file for IPFS\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  // Example Hash = QmXfojCPuMEv94vRBEFVKgRhn4pd6EBbECHFFgnMMD68oB\n  // Example url = https://ipfs.infura.io/ipfs/QmXfojCPuMEv94vRBEFVKgRhn4pd6EBbECHFFgnMMD68oB\n  onSubmit = (event) => {\n    event.preventDefault()\n    console.log(\"Submiting the form..\")\n  \n    ipfs.add(this.state.buffer, (error,result) => {\n      console.log('IPFS Result', result);\n      // const memeHash = result[0]\n      this.setState({ memeHash: result[0].hash })\n      if(error) {\n        console.error(\"aaaaaaaaaaaaaaaa\"+error)\n        return\n      }\n      // 2. Store file in BC\n\n    })\n    // Burada i≈ülem yap.\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/bootcamp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Hello Lacin\n          </a>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={`https://ipfs.infura.io/ipfs/${this.state.memeHash}`} />\n                </a>\n                <p>&nbsp;</p>\n                <h2>Change meme</h2>\n                <form onSubmit={this.onSubmit}>\n                  <input type=\"file\" onChange={this.captureFile} />\n                  <input type=\"submit\"/>\n                </form>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}