{"map":"{\"version\":3,\"sources\":[\"/home/lacin/Desktop/MemeDapp/src/serviceWorker.js\",\"/home/lacin/Desktop/MemeDapp/src/index.js\",\"/home/lacin/Desktop/MemeDapp/src/components/App.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"react_default\",\"a\",\"createElement\",\"App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"ipfs\",\"require\",\"ipfsClient\",\"host\",\"port\",\"protocol\",\"props\",\"_this\",\"Object\",\"_home_lacin_Desktop_MemeDapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__\",\"this\",\"_home_lacin_Desktop_MemeDapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__\",\"_home_lacin_Desktop_MemeDapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__\",\"call\",\"captureFile\",\"event\",\"preventDefault\",\"console\",\"log\",\"file\",\"target\",\"files\",\"reader\",\"FileReader\",\"readAsArrayBuffer\",\"onloadend\",\"setState\",\"buffer\",\"Buffer\",\"result\",\"state\",\"onSubmit\",\"add\",\"error\",\"memeHash\",\"hash\",\"contract\",\"methods\",\"set\",\"send\",\"from\",\"account\",\"r\",\"loadWeb3\",\"loadBlockchainData\",\"ethereum\",\"web3\",\"Web3\",\"enable\",\"currentProvider\",\"alert\",\"eth\",\"getAccounts\",\"accounts\",\"net\",\"getId\",\"networkId\",\"networkData\",\"Meme\",\"networks\",\"abi\",\"address\",\"Contract\",\"get\",\"_React$createElement\",\"react__WEBPACK_IMPORTED_MODULE_8___default\",\"className\",\"rel\",\"role\",\"href\",\"_home_lacin_Desktop_MemeDapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__\",\"src\",\"concat\",\"alt\",\"width\",\"height\",\"type\",\"onChange\",\"Component\"],\"mappings\":\"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\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport 'bootstrap/dist/css/bootstrap.css'\\nimport App from './components/App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"import React, { Component } from 'react';\\nimport Web3 from 'web3';\\nimport './App.css';\\nimport Meme from '../abis/Meme.json'\\n\\n//import { create } from 'ipfs-http-client'\\n//const ipfs = create({ host: 'localhost', port: '5001' })\\n\\n//const IPFS=require('ipfs-http-client');\\n//const ipfs2 =IPFS({host:'ipfs.infura.io',port:5001,protocol:'https'});\\n\\nconst ipfsClient = require('ipfs-http-client')\\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\\n\\nclass App extends Component {\\n\\n  async componentWillMount() {\\n    await this.loadWeb3()\\n    await this.loadBlockchainData()\\n  }\\n\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      account: null,\\n      buffer: null,\\n      contract: null,\\n      memeHash: ''\\n    };\\n  }\\n\\n  async loadWeb3() {\\n    if (window.ethereum) {\\n      window.web3 = new Web3(window.ethereum)\\n      console.log(\\\"1-\\\"+window.web3)\\n      await window.ethereum.enable()\\n      console.log(\\\"2-\\\")\\n    }\\n    else if (window.web3) {\\n      window.web3 = new Web3(window.web3.currentProvider)\\n      console.log(\\\"3-\\\")\\n    }\\n    else {\\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask! Be aware of Developer AREA!!')\\n    }\\n  }\\n\\n  async loadBlockchainData() {\\n    const web3 = window.web3\\n    // Get the account\\n    const accounts = await web3.eth.getAccounts()\\n    console.log(\\\"Account : \\\"+accounts)\\n    this.setState({account: accounts[0] })\\n    // Get the network\\n    const networkId = await web3.eth.net.getId()\\n    console.log(\\\"Network id : \\\"+networkId)\\n    // Get SC (we need abi: \\\"Meme.abi\\\" and address: \\\"networkData.address\\\")\\n    const networkData = Meme.networks[networkId]\\n    if(networkData)\\n    {\\n      // fecth contract\\n      const abi = Meme.abi\\n      const address = networkData.address\\n      const contract = web3.eth.Contract(abi,address)\\n      this.setState({contract})\\n      console.log(contract)\\n      // Get meme hash\\n      const memeHash = await contract.methods.get().call()\\n      this.setState( {memeHash} )\\n      console.log(\\\"current meme hash : \\\"+memeHash)\\n    }\\n    else \\n    {\\n      window.alert('SC not deloyed to detected network! ')\\n    }\\n  }\\n\\n  captureFile = (event) => {\\n    event.preventDefault()\\n    console.log('file captured!')\\n    // process file for IPFS\\n    const file = event.target.files[0]\\n    const reader = new window.FileReader()\\n    reader.readAsArrayBuffer(file)\\n    reader.onloadend = () => {\\n      this.setState({ buffer: Buffer(reader.result) })\\n      console.log('Reader Buffer : ', this.state.buffer)\\n    }\\n  }\\n\\n  // Example1 Hash = QmXfojCPuMEv94vRBEFVKgRhn4pd6EBbECHFFgnMMD68oB\\n  // Example1 url = https://ipfs.infura.io/ipfs/QmXfojCPuMEv94vRBEFVKgRhn4pd6EBbECHFFgnMMD68oB\\n  /*\\n  onSubmit = (event) => {\\n    event.preventDefault()\\n    console.log(\\\"Submiting file to ipfs..\\\")\\n  \\n    ipfs.add(this.state.buffer, (error,result) => {\\n      console.log('IPFS Result', result);\\n      // const memeHash = result[0]\\n      if(error) {\\n        console.error(\\\"BUFFER STATE ERROR : \\\"+error)\\n        return\\n      }\\n      this.setState({ memeHash: result[0].hash })\\n      // 2. Store file in BC\\n      this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\\n        return this.setState({ memeHash: result[0].hash \\n      })1\\n    })\\n  })\\n}\\n*/\\n  onSubmit = (event) => {\\n    event.preventDefault()\\n    console.log(\\\"Submitting file to ipfs...\\\")\\n    ipfs.add(this.state.buffer, (error, result) => {\\n      console.log('Ipfs result', result)\\n      const memeHash = result[0].hash\\n      if(error) {\\n        console.error(error)\\n        return\\n      }\\n      //this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\\n      //   return this.setState({ memeHash: result.hash })\\n      //})\\n      this.state.contract.methods.set(memeHash).send({ from: this.state.account }).then((r) => {\\n        this.setState({ memeHash })\\n      })\\n    })\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <nav className=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\n          <a\\n            className=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener noreferrer\\\"\\n          >\\n            Hello Lacin\\n          </a>\\n          <ul className=\\\"navbar-nav px-3\\\">\\n            <li className=\\\"nav-item text-nawrap d-none d-sm-none d-sm-block\\\">\\n              <small className=\\\"text-white\\\"> {this.state.account} </small>\\n            </li>\\n          </ul>\\n        </nav>\\n        <div className=\\\"container-fluid mt-5\\\">\\n          <div className=\\\"row\\\">\\n            <main role=\\\"main\\\" className=\\\"col-lg-12 d-flex text-center\\\">\\n              <div className=\\\"content mr-auto ml-auto\\\">\\n                <a\\n                  href=\\\"javascript:window.top.location.reload(true)\\\" \\n                  href=\\\"www.github.com\\\"\\n                  class=\\\"continue\\\"\\n                  target=\\\"_blank\\\"\\n                  rel=\\\"noopener noreferrer\\\"\\n                >\\n                  <img src={`https://ipfs.infura.io/ipfs/${this.state.memeHash}`} \\n                  alt=\\\"LacinDBImage\\\" width=\\\"500\\\" height=\\\"400\\\" />\\n                </a>\\n                <p>&nbsp;</p>\\n                <h2>Change Your Meme</h2>\\n                <form onSubmit={this.onSubmit}>\\n                  <input type=\\\"file\\\" onChange={this.captureFile} />\\n                  <input type=\\\"submit\\\"/>\\n                </form>\\n              </div>\\n            </main>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1182:function(e,t,n){\"use strict\";n.r(t);var a=n(15),r=n.n(a),i=n(445),s=n.n(i),o=(n(456),n(446));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(o.a,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},200:function(e,t){},241:function(e){e.exports={contractName:\"Meme\",abi:[{constant:!1,inputs:[{internalType:\"string\",name:\"_memeHash\",type:\"string\"}],name:\"set\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"get\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"}],metadata:'{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_memeHash\",\"type\":\"string\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/lacin/Desktop/myIPFS/ProjectLacin/src/contracts/Meme.sol\":\"Meme\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/lacin/Desktop/myIPFS/ProjectLacin/src/contracts/Meme.sol\":{\"keccak256\":\"0x75bbe8f7417b975ae7dcee1807396887557eef7c7e27a01d81f5ec66cf34004b\",\"urls\":[\"bzz-raw://a80ecabf7abe1732f385aa276e277f68e36eaf7629a1cdb6a404c1d9da01670c\",\"dweb:/ipfs/QmaCrbkWr71NiRZ5aZMmT48xhQpRSLWC6RDyvSmiK7YvGf\"]}},\"version\":1}',bytecode:\"0x608060405234801561001057600080fd5b5061030f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ed3885e1461003b5780636d4ce63c146100f6575b600080fd5b6100f46004803603602081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610179565b005b6100fe610193565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013e578082015181840152602081019050610123565b50505050905090810190601f16801561016b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b806000908051906020019061018f929190610235565b5050565b606060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561022b5780601f106102005761010080835404028352916020019161022b565b820191906000526020600020905b81548152906001019060200180831161020e57829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061027657805160ff19168380011785556102a4565b828001600101855582156102a4579182015b828111156102a3578251825591602001919060010190610288565b5b5090506102b191906102b5565b5090565b6102d791905b808211156102d35760008160009055506001016102bb565b5090565b9056fea265627a7a72315820255b7caf275ad990310c4339e72d780d8993e383499a52330c9b96bb059ae62364736f6c63430005100032\",deployedBytecode:\"0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634ed3885e1461003b5780636d4ce63c146100f6575b600080fd5b6100f46004803603602081101561005157600080fd5b810190808035906020019064010000000081111561006e57600080fd5b82018360208201111561008057600080fd5b803590602001918460018302840111640100000000831117156100a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610179565b005b6100fe610193565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013e578082015181840152602081019050610123565b50505050905090810190601f16801561016b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b806000908051906020019061018f929190610235565b5050565b606060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561022b5780601f106102005761010080835404028352916020019161022b565b820191906000526020600020905b81548152906001019060200180831161020e57829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061027657805160ff19168380011785556102a4565b828001600101855582156102a4579182015b828111156102a3578251825591602001919060010190610288565b5b5090506102b191906102b5565b5090565b6102d791905b808211156102d35760008160009055506001016102bb565b5090565b9056fea265627a7a72315820255b7caf275ad990310c4339e72d780d8993e383499a52330c9b96bb059ae62364736f6c63430005100032\",sourceMap:\"25:197:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:197:0;;;;;;;\",deployedSourceMap:\"25:197:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:197:0;;;;;;;;;;;;;;;;;;;;;;;;63:76;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;63:76:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;63:76:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;63:76:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;63:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;63:76:0;;;;;;;;;;;;;;;:::i;:::-;;143:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;143:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63:76;125:9;114:8;:20;;;;;;;;;;;;:::i;:::-;;63:76;:::o;143:77::-;179:13;207:8;200:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;143:77;:::o;25:197::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o\",source:\"pragma solidity ^0.5.0;\\n\\ncontract Meme {\\n  string memeHash;\\n\\n  function set(string memory _memeHash) public {\\n    memeHash = _memeHash;\\n  }\\n\\n  function get() public view returns (string memory) {\\n    return memeHash;\\n  }\\n}\\n\",sourcePath:\"/home/lacin/Desktop/myIPFS/ProjectLacin/src/contracts/Meme.sol\",ast:{absolutePath:\"/home/lacin/Desktop/myIPFS/ProjectLacin/src/contracts/Meme.sol\",exportedSymbols:{Meme:[22]},id:23,nodeType:\"SourceUnit\",nodes:[{id:1,literals:[\"solidity\",\"^\",\"0.5\",\".0\"],nodeType:\"PragmaDirective\",src:\"0:23:0\"},{baseContracts:[],contractDependencies:[],contractKind:\"contract\",documentation:null,fullyImplemented:!0,id:22,linearizedBaseContracts:[22],name:\"Meme\",nodeType:\"ContractDefinition\",nodes:[{constant:!1,id:3,name:\"memeHash\",nodeType:\"VariableDeclaration\",scope:22,src:\"43:15:0\",stateVariable:!0,storageLocation:\"default\",typeDescriptions:{typeIdentifier:\"t_string_storage\",typeString:\"string\"},typeName:{id:2,name:\"string\",nodeType:\"ElementaryTypeName\",src:\"43:6:0\",typeDescriptions:{typeIdentifier:\"t_string_storage_ptr\",typeString:\"string\"}},value:null,visibility:\"internal\"},{body:{id:12,nodeType:\"Block\",src:\"108:31:0\",statements:[{expression:{argumentTypes:null,id:10,isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,leftHandSide:{argumentTypes:null,id:8,name:\"memeHash\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:3,src:\"114:8:0\",typeDescriptions:{typeIdentifier:\"t_string_storage\",typeString:\"string storage ref\"}},nodeType:\"Assignment\",operator:\"=\",rightHandSide:{argumentTypes:null,id:9,name:\"_memeHash\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:5,src:\"125:9:0\",typeDescriptions:{typeIdentifier:\"t_string_memory_ptr\",typeString:\"string memory\"}},src:\"114:20:0\",typeDescriptions:{typeIdentifier:\"t_string_storage\",typeString:\"string storage ref\"}},id:11,nodeType:\"ExpressionStatement\",src:\"114:20:0\"}]},documentation:null,id:13,implemented:!0,kind:\"function\",modifiers:[],name:\"set\",nodeType:\"FunctionDefinition\",parameters:{id:6,nodeType:\"ParameterList\",parameters:[{constant:!1,id:5,name:\"_memeHash\",nodeType:\"VariableDeclaration\",scope:13,src:\"76:23:0\",stateVariable:!1,storageLocation:\"memory\",typeDescriptions:{typeIdentifier:\"t_string_memory_ptr\",typeString:\"string\"},typeName:{id:4,name:\"string\",nodeType:\"ElementaryTypeName\",src:\"76:6:0\",typeDescriptions:{typeIdentifier:\"t_string_storage_ptr\",typeString:\"string\"}},value:null,visibility:\"internal\"}],src:\"75:25:0\"},returnParameters:{id:7,nodeType:\"ParameterList\",parameters:[],src:\"108:0:0\"},scope:22,src:\"63:76:0\",stateMutability:\"nonpayable\",superFunction:null,visibility:\"public\"},{body:{id:20,nodeType:\"Block\",src:\"194:26:0\",statements:[{expression:{argumentTypes:null,id:18,name:\"memeHash\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:3,src:\"207:8:0\",typeDescriptions:{typeIdentifier:\"t_string_storage\",typeString:\"string storage ref\"}},functionReturnParameters:17,id:19,nodeType:\"Return\",src:\"200:15:0\"}]},documentation:null,id:21,implemented:!0,kind:\"function\",modifiers:[],name:\"get\",nodeType:\"FunctionDefinition\",parameters:{id:14,nodeType:\"ParameterList\",parameters:[],src:\"155:2:0\"},returnParameters:{id:17,nodeType:\"ParameterList\",parameters:[{constant:!1,id:16,name:\"\",nodeType:\"VariableDeclaration\",scope:21,src:\"179:13:0\",stateVariable:!1,storageLocation:\"memory\",typeDescriptions:{typeIdentifier:\"t_string_memory_ptr\",typeString:\"string\"},typeName:{id:15,name:\"string\",nodeType:\"ElementaryTypeName\",src:\"179:6:0\",typeDescriptions:{typeIdentifier:\"t_string_storage_ptr\",typeString:\"string\"}},value:null,visibility:\"internal\"}],src:\"178:15:0\"},scope:22,src:\"143:77:0\",stateMutability:\"view\",superFunction:null,visibility:\"public\"}],scope:23,src:\"25:197:0\"}],src:\"0:223:0\"},legacyAST:{absolutePath:\"/home/lacin/Desktop/myIPFS/ProjectLacin/src/contracts/Meme.sol\",exportedSymbols:{Meme:[22]},id:23,nodeType:\"SourceUnit\",nodes:[{id:1,literals:[\"solidity\",\"^\",\"0.5\",\".0\"],nodeType:\"PragmaDirective\",src:\"0:23:0\"},{baseContracts:[],contractDependencies:[],contractKind:\"contract\",documentation:null,fullyImplemented:!0,id:22,linearizedBaseContracts:[22],name:\"Meme\",nodeType:\"ContractDefinition\",nodes:[{constant:!1,id:3,name:\"memeHash\",nodeType:\"VariableDeclaration\",scope:22,src:\"43:15:0\",stateVariable:!0,storageLocation:\"default\",typeDescriptions:{typeIdentifier:\"t_string_storage\",typeString:\"string\"},typeName:{id:2,name:\"string\",nodeType:\"ElementaryTypeName\",src:\"43:6:0\",typeDescriptions:{typeIdentifier:\"t_string_storage_ptr\",typeString:\"string\"}},value:null,visibility:\"internal\"},{body:{id:12,nodeType:\"Block\",src:\"108:31:0\",statements:[{expression:{argumentTypes:null,id:10,isConstant:!1,isLValue:!1,isPure:!1,lValueRequested:!1,leftHandSide:{argumentTypes:null,id:8,name:\"memeHash\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:3,src:\"114:8:0\",typeDescriptions:{typeIdentifier:\"t_string_storage\",typeString:\"string storage ref\"}},nodeType:\"Assignment\",operator:\"=\",rightHandSide:{argumentTypes:null,id:9,name:\"_memeHash\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:5,src:\"125:9:0\",typeDescriptions:{typeIdentifier:\"t_string_memory_ptr\",typeString:\"string memory\"}},src:\"114:20:0\",typeDescriptions:{typeIdentifier:\"t_string_storage\",typeString:\"string storage ref\"}},id:11,nodeType:\"ExpressionStatement\",src:\"114:20:0\"}]},documentation:null,id:13,implemented:!0,kind:\"function\",modifiers:[],name:\"set\",nodeType:\"FunctionDefinition\",parameters:{id:6,nodeType:\"ParameterList\",parameters:[{constant:!1,id:5,name:\"_memeHash\",nodeType:\"VariableDeclaration\",scope:13,src:\"76:23:0\",stateVariable:!1,storageLocation:\"memory\",typeDescriptions:{typeIdentifier:\"t_string_memory_ptr\",typeString:\"string\"},typeName:{id:4,name:\"string\",nodeType:\"ElementaryTypeName\",src:\"76:6:0\",typeDescriptions:{typeIdentifier:\"t_string_storage_ptr\",typeString:\"string\"}},value:null,visibility:\"internal\"}],src:\"75:25:0\"},returnParameters:{id:7,nodeType:\"ParameterList\",parameters:[],src:\"108:0:0\"},scope:22,src:\"63:76:0\",stateMutability:\"nonpayable\",superFunction:null,visibility:\"public\"},{body:{id:20,nodeType:\"Block\",src:\"194:26:0\",statements:[{expression:{argumentTypes:null,id:18,name:\"memeHash\",nodeType:\"Identifier\",overloadedDeclarations:[],referencedDeclaration:3,src:\"207:8:0\",typeDescriptions:{typeIdentifier:\"t_string_storage\",typeString:\"string storage ref\"}},functionReturnParameters:17,id:19,nodeType:\"Return\",src:\"200:15:0\"}]},documentation:null,id:21,implemented:!0,kind:\"function\",modifiers:[],name:\"get\",nodeType:\"FunctionDefinition\",parameters:{id:14,nodeType:\"ParameterList\",parameters:[],src:\"155:2:0\"},returnParameters:{id:17,nodeType:\"ParameterList\",parameters:[{constant:!1,id:16,name:\"\",nodeType:\"VariableDeclaration\",scope:21,src:\"179:13:0\",stateVariable:!1,storageLocation:\"memory\",typeDescriptions:{typeIdentifier:\"t_string_memory_ptr\",typeString:\"string\"},typeName:{id:15,name:\"string\",nodeType:\"ElementaryTypeName\",src:\"179:6:0\",typeDescriptions:{typeIdentifier:\"t_string_storage_ptr\",typeString:\"string\"}},value:null,visibility:\"internal\"}],src:\"178:15:0\"},scope:22,src:\"143:77:0\",stateMutability:\"view\",superFunction:null,visibility:\"public\"}],scope:23,src:\"25:197:0\"}],src:\"0:223:0\"},compiler:{name:\"solc\",version:\"0.5.16+commit.9c3226ce.Emscripten.clang\"},networks:{5777:{events:{},links:{},address:\"0x0e08701e4A9191F46993d9f2A3B1F614f1c3409e\",transactionHash:\"0xbb6402c99fa7bdba80cfabd8c19b7ad90094aebd0ab6f93a454e38b761f80754\"}},schemaVersion:\"3.2.3\",updatedAt:\"2021-12-17T22:16:10.099Z\",networkType:\"ethereum\",devdoc:{methods:{}},userdoc:{methods:{}}}},446:function(e,t,n){\"use strict\";(function(e){var a=n(122),r=n(14),i=n.n(r),s=n(153),o=n(447),c=n(449),l=n(448),d=n(239),p=n(450),m=n(15),u=n.n(m),f=n(240),y=n.n(f),b=(n(714),n(241)),g=n(716)({host:\"ipfs.infura.io\",port:5001,protocol:\"https\"}),h=function(t){function n(t){var a;return Object(o.a)(this,n),(a=Object(c.a)(this,Object(l.a)(n).call(this,t))).captureFile=function(t){t.preventDefault(),console.log(\"file captured!\");var n=t.target.files[0],r=new window.FileReader;r.readAsArrayBuffer(n),r.onloadend=function(){a.setState({buffer:e(r.result)}),console.log(\"Reader Buffer : \",a.state.buffer)}},a.onSubmit=function(e){e.preventDefault(),console.log(\"Submitting file to ipfs...\"),g.add(a.state.buffer,function(e,t){console.log(\"Ipfs result\",t);var n=t[0].hash;e?console.error(e):a.state.contract.methods.set(n).send({from:a.state.account}).then(function(e){a.setState({memeHash:n})})})},a.state={account:null,buffer:null,contract:null,memeHash:\"\"},a}return Object(p.a)(n,t),Object(d.a)(n,[{key:\"componentWillMount\",value:function(){var e=Object(s.a)(i.a.mark(function e(){return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.loadWeb3();case 2:return e.next=4,this.loadBlockchainData();case 4:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()}]),Object(d.a)(n,[{key:\"loadWeb3\",value:function(){var e=Object(s.a)(i.a.mark(function e(){return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!window.ethereum){e.next=8;break}return window.web3=new y.a(window.ethereum),console.log(\"1-\"+window.web3),e.next=5,window.ethereum.enable();case 5:console.log(\"2-\"),e.next=9;break;case 8:window.web3?(window.web3=new y.a(window.web3.currentProvider),console.log(\"3-\")):window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask! Be aware of Developer AREA!!\");case 9:case\"end\":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}()},{key:\"loadBlockchainData\",value:function(){var e=Object(s.a)(i.a.mark(function e(){var t,n,a,r,s,o,c,l;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=window.web3,e.next=3,t.eth.getAccounts();case 3:return n=e.sent,console.log(\"Account : \"+n),this.setState({account:n[0]}),e.next=8,t.eth.net.getId();case 8:if(a=e.sent,console.log(\"Network id : \"+a),!(r=b.networks[a])){e.next=24;break}return s=b.abi,o=r.address,c=t.eth.Contract(s,o),this.setState({contract:c}),console.log(c),e.next=19,c.methods.get().call();case 19:l=e.sent,this.setState({memeHash:l}),console.log(\"current meme hash : \"+l),e.next=25;break;case 24:window.alert(\"SC not deloyed to detected network! \");case 25:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){var e;return u.a.createElement(\"div\",null,u.a.createElement(\"nav\",{className:\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\"},u.a.createElement(\"a\",{className:\"navbar-brand col-sm-3 col-md-2 mr-0\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Hello Lacin\"),u.a.createElement(\"ul\",{className:\"navbar-nav px-3\"},u.a.createElement(\"li\",{className:\"nav-item text-nawrap d-none d-sm-none d-sm-block\"},u.a.createElement(\"small\",{className:\"text-white\"},\" \",this.state.account,\" \")))),u.a.createElement(\"div\",{className:\"container-fluid mt-5\"},u.a.createElement(\"div\",{className:\"row\"},u.a.createElement(\"main\",{role:\"main\",className:\"col-lg-12 d-flex text-center\"},u.a.createElement(\"div\",{className:\"content mr-auto ml-auto\"},u.a.createElement(\"a\",(e={href:\"javascript:window.top.location.reload(true)\"},Object(a.a)(e,\"href\",\"www.github.com\"),Object(a.a)(e,\"class\",\"continue\"),Object(a.a)(e,\"target\",\"_blank\"),Object(a.a)(e,\"rel\",\"noopener noreferrer\"),e),u.a.createElement(\"img\",{src:\"https://ipfs.infura.io/ipfs/\".concat(this.state.memeHash),alt:\"LacinDBImage\",width:\"500\",height:\"400\"})),u.a.createElement(\"p\",null,\"\\xa0\"),u.a.createElement(\"h2\",null,\"Change Your Meme\"),u.a.createElement(\"form\",{onSubmit:this.onSubmit},u.a.createElement(\"input\",{type:\"file\",onChange:this.captureFile}),u.a.createElement(\"input\",{type:\"submit\"})))))))}}]),n}(m.Component);t.a=h}).call(this,n(0).Buffer)},451:function(e,t,n){e.exports=n(1182)},469:function(e,t){},471:function(e,t){},562:function(e,t){},632:function(e,t){},714:function(e,t,n){},847:function(e,t){},881:function(e,t){},883:function(e,t){},902:function(e,t){},904:function(e,t){},911:function(e,t){},913:function(e,t){},919:function(e,t){},920:function(e,t){},934:function(e,t){},936:function(e,t){},944:function(e,t){},946:function(e,t){},952:function(e,t){},960:function(e,t){},962:function(e,t){},981:function(e,t){},983:function(e,t){}},[[451,2,1]]]);","extractedComments":[]}